# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost:3306/crudthymeleaf?useSSL=false
# Username and password
spring.datasource.username = root
spring.datasource.password = 1992
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# THYMELEAF (ThymeleafAutoConfiguration)
#Whether to enable template caching.
spring.thymeleaf.cache=false 
#Whether to check that the template exists before rendering it.
spring.thymeleaf.check-template=true
#Whether to check that the templates location exists.
spring.thymeleaf.check-template-location=true
#Whether to enable Thymeleaf view resolution for Web frameworks.
spring.thymeleaf.enabled=true
#Enable the SpringEL compiler in SpringEL expressions.
spring.thymeleaf.enable-spring-el-compiler=false
#Template files encoding.
spring.thymeleaf.encoding=UTF-8
#Template mode to be applied to templates. See also Thymeleaf's TemplateMode enum.
spring.thymeleaf.mode=HTML5
#Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
#Content-Type value written to HTTP responses.
spring.thymeleaf.servlet.content-type=text/html
#Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html




#datasource
#spring.datasource.url = jdbc:postgresql://localhost:5432/blog
#spring.datasource.username = postgres
#spring.datasource.password = admin
#spring.datasource.driver-class-name = org.postgresql.Driver
#spring.datasource.validationQuery = SELECT 1

#jpa/hibernate
#spring.jpa.database=POSTGRESQL
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect